(define (function a)
	l
	5 ; case 1
	(if x y n)
	(if x y)
	(if x y (if x y))

	(if a n p)
	(cadr '(a bb cc))
	(cdr '(a bb cc))
	(cddr '(a bb cc) (cons 'a '((x y) beta))
	(and 4 5)
	(or 7 8))
	
	(not '(ab))
	(number? 'ab(symbol? (cons '5678 '()))
	(and (list? 87) (cons '765 '(e n 6 5 4)))
	(zero? '())
	(null? '(if a b c))
	(or (and (char? 55) (char? '())) (char? 'd))
	(string? 'uytrewqsdwefgrhtyj7htgrfe))
	
	(+ 5 'g)
	(- 55 '(d))
	(- 55 '(45))
	(/ a 6(* 'a 77)
	(= 5 'a)
	(> 6 5)
	(< 50 (cons 'a '((x y) beta)))
	(>= 7654 'd)
	(<= '(4 3 2) (car '(5))))
	
	'(lister 5 6)
	(display (function a))
	(newline)

	; case 2
	; rule 44
	'()
	; remaining rules
	'(anding)
	'(6)
	'(cons)
	'(if)
	'(display)
	'(newline)
	'(car'(caddr)
	'(and)
	'(or)
	'(not))
	
	'(define)
	'(number?)
	'(symbol?)
	'(list?)
	'(zero?)
	'(null?)
	'(char?)
	'(string?)
	'(+)
	'(-)
	'(/)
	'(*)
	'(=)
	'(>)
	'(<)
	'(>=)
	'(<=)
	'('())
)(define (function a)
	l
	5 ; case 1
	(if x y n)
	(if x y)	
	(if a n p)
	(cadr '(a bb cc))
	(cdr '(a bb cc))
	(cddr '(a bb cc) (cons 'a '((x y) beta))
	(and 4 5)
	(or 7 8))
	
	(not '(ab))
	(number? 'ab)
	(symbol? (cons '5678 '()))
	(and (list? 87) (cons '765 '(e n 6 5 4)))
	(zero? '())
	(null? '(if a b c))
	(or (and (char? 55) (char? '())) (char? 'd))
	(string? 'uytrewqsdwefgrhtyj7htgrfe)
	(+ 5 'g)
	(- 55 '(d))
	(- 55 '(45))
	(/ a 6)
	(* 'a 77)
	(= 5 'a)
	(> 6 5)
	(< 50 (cons 'a '((x y) beta)))
	(>= 7654 'd)
	(<= '(4 3 2) (car '(5)))
	'(lister 5 6)
	(display (function a))
	(newline)

	; case 2
	; rule 44
	'()
	; remaining rules
	'(anding)
	'(6)
	'(cons)
	'(if)
	'(display)
	'(newline)
	'(car'(caddr)
	'(and)
	'(or)
	'(not))
	
	'(define)
	'(number?)
	'(symbol?)
	'(list?)
	'(zero?)
	'(null?)
	'(char?)
	'(string?)
	'(+)
	'(-)
	'(/)
	'(*)
	'(=)
	'(>)
	'(<)
	'(>=)
	'(<=)
	'('())
)